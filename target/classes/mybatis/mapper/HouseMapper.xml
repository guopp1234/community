<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.community.mapper.HouseMapper">
    <resultMap id="BaseResultMap" type="cn.community.pojo.House">
        <id column="house_id" jdbcType="VARCHAR" property="houseId"/>
        <result column="build_number" jdbcType="INTEGER" property="buildNumber"/>
        <result column="unit_number" jdbcType="INTEGER" property="unitNumber"/>
        <result column="house_number" jdbcType="VARCHAR" property="houseNumber"/>
        <result column="sale_state" jdbcType="CHAR" property="saleState"/>
        <result column="hose_type" jdbcType="VARCHAR" property="hoseType"/>
        <result column="owner_Id" jdbcType="INTEGER" property="ownerId"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    house_id, build_number, unit_number, house_number, sale_state, hose_type, owner_Id
  </sql>
    <select id="selectByExample" parameterType="cn.community.pojo.HouseExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from house
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from house
        where house_id = #{houseId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from house
    where house_id = #{houseId,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="cn.community.pojo.HouseExample">
        delete from house
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.community.pojo.House">
    insert into house (house_id, build_number, unit_number, 
      house_number, sale_state, hose_type, 
      owner_Id)
    values (#{houseId,jdbcType=VARCHAR}, #{buildNumber,jdbcType=INTEGER}, #{unitNumber,jdbcType=INTEGER}, 
      #{houseNumber,jdbcType=VARCHAR}, #{saleState,jdbcType=CHAR}, #{hoseType,jdbcType=VARCHAR}, 
      #{ownerId,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="cn.community.pojo.House">
        insert into house
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="houseId != null">
                house_id,
            </if>
            <if test="buildNumber != null">
                build_number,
            </if>
            <if test="unitNumber != null">
                unit_number,
            </if>
            <if test="houseNumber != null">
                house_number,
            </if>
            <if test="saleState != null">
                sale_state,
            </if>
            <if test="hoseType != null">
                hose_type,
            </if>
            <if test="ownerId != null">
                owner_Id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="houseId != null">
                #{houseId,jdbcType=VARCHAR},
            </if>
            <if test="buildNumber != null">
                #{buildNumber,jdbcType=INTEGER},
            </if>
            <if test="unitNumber != null">
                #{unitNumber,jdbcType=INTEGER},
            </if>
            <if test="houseNumber != null">
                #{houseNumber,jdbcType=VARCHAR},
            </if>
            <if test="saleState != null">
                #{saleState,jdbcType=CHAR},
            </if>
            <if test="hoseType != null">
                #{hoseType,jdbcType=VARCHAR},
            </if>
            <if test="ownerId != null">
                #{ownerId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.community.pojo.HouseExample" resultType="java.lang.Long">
        select count(*) from house
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update house
        <set>
            <if test="record.houseId != null">
                house_id = #{record.houseId,jdbcType=VARCHAR},
            </if>
            <if test="record.buildNumber != null">
                build_number = #{record.buildNumber,jdbcType=INTEGER},
            </if>
            <if test="record.unitNumber != null">
                unit_number = #{record.unitNumber,jdbcType=INTEGER},
            </if>
            <if test="record.houseNumber != null">
                house_number = #{record.houseNumber,jdbcType=VARCHAR},
            </if>
            <if test="record.saleState != null">
                sale_state = #{record.saleState,jdbcType=CHAR},
            </if>
            <if test="record.hoseType != null">
                hose_type = #{record.hoseType,jdbcType=VARCHAR},
            </if>
            <if test="record.ownerId != null">
                owner_Id = #{record.ownerId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update house
        set house_id = #{record.houseId,jdbcType=VARCHAR},
        build_number = #{record.buildNumber,jdbcType=INTEGER},
        unit_number = #{record.unitNumber,jdbcType=INTEGER},
        house_number = #{record.houseNumber,jdbcType=VARCHAR},
        sale_state = #{record.saleState,jdbcType=CHAR},
        hose_type = #{record.hoseType,jdbcType=VARCHAR},
        owner_Id = #{record.ownerId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.community.pojo.House">
        update house
        <set>
            <if test="buildNumber != null">
                build_number = #{buildNumber,jdbcType=INTEGER},
            </if>
            <if test="unitNumber != null">
                unit_number = #{unitNumber,jdbcType=INTEGER},
            </if>
            <if test="houseNumber != null">
                house_number = #{houseNumber,jdbcType=VARCHAR},
            </if>
            <if test="saleState != null">
                sale_state = #{saleState,jdbcType=CHAR},
            </if>
            <if test="hoseType != null">
                hose_type = #{hoseType,jdbcType=VARCHAR},
            </if>
            <if test="ownerId != null">
                owner_Id = #{ownerId,jdbcType=INTEGER},
            </if>
        </set>
        where house_id = #{houseId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.community.pojo.House">
    update house
    set build_number = #{buildNumber,jdbcType=INTEGER},
      unit_number = #{unitNumber,jdbcType=INTEGER},
      house_number = #{houseNumber,jdbcType=VARCHAR},
      sale_state = #{saleState,jdbcType=CHAR},
      hose_type = #{hoseType,jdbcType=VARCHAR},
      owner_Id = #{ownerId,jdbcType=INTEGER}
    where house_id = #{houseId,jdbcType=VARCHAR}
  </update>
</mapper>